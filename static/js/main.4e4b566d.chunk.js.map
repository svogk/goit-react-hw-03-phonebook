{"version":3,"sources":["components/Filter/Filter.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","Filter","filter","onChange","className","s","type","name","value","ContactForm","state","number","handleChange","target","setState","handleSubmit","event","preventDefault","onAddContact","props","validateForm","id","uuidv4","reset","onCheckContact","trim","alert","form","onSubmit","this","htmlFor","input","placeholder","autoFocus","Component","ContactListItem","onDelete","item","button","onClick","protoTypes","PropTypes","string","isRequired","func","propTypes","contacts","arrayOf","shape","ContactList","length","map","App","handleAddNewContact","newContact","handleCheckContact","isExistContact","find","contact","handleDeleteContact","handleFilter","currentTarget","getVisibleContact","toLowerCase","includes","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e4b566d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1X-_P\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div>\n      <p className={s.filter}>Find contacts by name</p>\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onAddContact: PropTypes.func,\n    onCheckContact: PropTypes.func,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    const { onAddContact } = this.props;\n    const isValidateForm = this.validateForm();\n    if (!isValidateForm) {\n      this.reset();\n      return;\n    }\n    onAddContact({ id: uuidv4(), name, number });\n    this.reset();\n  };\n\n  validateForm = () => {\n    const { name, number } = this.state;\n    const { onCheckContact } = this.props;\n    if (!name.trim() || !number.trim()) {\n      alert('Для добавления контакта заполните поля Name и Number');\n      return false;\n    }\n    return onCheckContact(name);\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label htmlFor=\"\">\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              placeholder=\"Введите имя контакта\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n          </label>\n          <label htmlFor=\"\">\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              placeholder=\"Введите номер контакта\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <button>Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onDelete }) => {\n  return (\n    <li className={s.item}>\n      {name}: {number}\n      <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.protoTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onDelete={onDelete}\n          id={id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactListItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\n  ),\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport Filter from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\n\nimport contacts from './data/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts,\n    filter: '',\n  };\n\n  handleAddNewContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckContact = name => {\n    const { contacts } = this.state;\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    if (isExistContact) {\n      alert('Контакт с таким именем уже существует!');\n    }\n    return !isExistContact;\n  };\n\n  handleDeleteContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilter = event => {\n    const { value } = event.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле contacts');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContact();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAddContact={this.handleAddNewContact}\n          onCheckContact={this.handleCheckContact}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDelete={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1WBYM\",\"input\":\"ContactForm_input__Piyxb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2YpwK\",\"button\":\"ContactListItem_button__2pJAF\"};"],"sourceRoot":""}